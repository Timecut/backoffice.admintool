trigger: none

parameters:
  - name: environment
    displayName: 'Select environment'
    type: string
    default: 'frontend_production'
    values:
      - frontend_production
      - backend_production

jobs:
- job: frontend_production
  displayName: 'Build and Deploy Frontend for Production'
  condition: eq('${{ parameters.environment }}', 'frontend_production')
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseNode@1
    inputs:
      version: '16.x'
  - script: |
      echo "Generating BUILD_ID"
      BUILD_ID=$(date +%Y%m%d%H%M%S)
      echo "##vso[task.setvariable variable=BUILD_ID]$BUILD_ID"
    displayName: 'Generate BUILD_ID'
  - script: |
      echo "Installing dependencies for Frontend"
      cd frontend/frontend_admintool
      yarn install
    displayName: 'Install dependencies'
  - script: |
      echo "Building Frontend"
      cd frontend/frontend_admintool
      yarn build
    displayName: 'Build Frontend'
  - script: |
      echo "Checking SSH connection"
      ssh -vvv -t web@65.21.20.215 "pwd && ls -al"
    displayName: 'Verify SSH Connection'
  - script: |
      echo "Deploying Frontend to server using rsync"
      ssh web@65.21.20.215 "mkdir -p /home/web/backoffice.admintool/releases/frontend_${BUILD_ID}"
      rsync -avz frontend/frontend_admintool/dist/ web@65.21.20.215:/home/web/backoffice.admintool/releases/frontend_${BUILD_ID}
    displayName: 'Deploy Frontend'
  - script: |
      echo "Ensuring only 25 releases are kept"
      ssh web@65.21.20.215 "ls -dt /home/web/backoffice.admintool/releases/frontend_* | tail -n +26 | xargs rm -rf"
    displayName: 'Cleanup Old Frontend Releases'
  - script: |
      echo "Switching symlink to the new release"
      ssh web@65.21.20.215 "ln -sfn /home/web/backoffice.admintool/releases/frontend_${BUILD_ID} /home/web/backoffice.admintool/releases/frontend_production"
    displayName: 'Switch Frontend Symlink'
  - script: |
      echo "Starting Frontend Docker Container"
      ssh web@65.21.20.215 "docker-compose -f /home/web/backoffice.admintool/releases/frontend_${BUILD_ID}/docker-compose.yml up -d"
    displayName: 'Start Frontend Docker Container'

- job: backend_production
  displayName: 'Build and Deploy Backend for Production'
  condition: eq('${{ parameters.environment }}', 'backend_production')
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseNode@1
    inputs:
      version: '16.x'
  - script: |
      echo "Generating BUILD_ID"
      BUILD_ID=$(date +%Y%m%d%H%M%S)
      echo "##vso[task.setvariable variable=BUILD_ID]$BUILD_ID"
    displayName: 'Generate BUILD_ID'
  - script: |
      echo "Installing dependencies for Backend"
      cd backend/backend_admintool
      yarn install
    displayName: 'Install dependencies'
  - script: |
      echo "Building Backend"
      cd backend/backend_admintool
      yarn build
    displayName: 'Build Backend'
  - script: |
      echo "Checking SSH connection"
      ssh -vvv -t web@65.21.20.215 "pwd && ls -al"
    displayName: 'Verify SSH Connection'
  - script: |
      echo "Deploying Backend to server using rsync"
      ssh web@65.21.20.215 "mkdir -p /home/web/backoffice.admintool/releases/backend_${BUILD_ID}"
      rsync -avz backend/backend_admintool/dist/ web@65.21.20.215:/home/web/backoffice.admintool/releases/backend_${BUILD_ID}
    displayName: 'Deploy Backend'
  - script: |
      echo "Ensuring only 25 releases are kept"
      ssh web@65.21.20.215 "ls -dt /home/web/backoffice.admintool/releases/backend_* | tail -n +26 | xargs rm -rf"
    displayName: 'Cleanup Old Backend Releases'
  - script: |
      echo "Switching symlink to the new release"
      ssh web@65.21.20.215 "ln -sfn /home/web/backoffice.admintool/releases/backend_${BUILD_ID} /home/web/backoffice.admintool/releases/backend_production"
    displayName: 'Switch Backend Symlink'
  - script: |
      echo "Starting Backend Docker Container"
      ssh web@65.21.20.215 "docker-compose -f /home/web/backoffice.admintool/releases/backend_${BUILD_ID}/docker-compose.yml up -d"
    displayName: 'Start Backend Docker Container'
